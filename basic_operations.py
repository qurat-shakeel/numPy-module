# -*- coding: utf-8 -*-
"""basic_operations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ShWHWXuWVFVqOJHNzKRbmqpX6aWGy3py
"""

import numpy as np
a=np.array([1,2,3,4]) # create an array
a+1   # scalar addition, 1 is added to every element of a

a**2

b=np.ones(4)+1
a-b

a*b

# matrix  multiplication
c=np.diag([1,2,3,4])
print(c * c)
print("***************")
print(c.dot(c))  # same as c*c

a=np.array([1,2,3,4])
b=np.array([5,2,2,4])
a==b

a>b

# array wise comparisons
a=np.array([1,2,3,4])
b=np.array([5,2,2,4])
c=np.array([1,2,3,4])

np.array_equal(a,b)

np.array_equal(a,c)

# logical operations
a=np.array([1,1,0,0] ,dtype=bool)
b=np.array([1,0,1,0] ,dtype=bool)
np.logical_or(a,b)

np.logical_and(a,b)

# transcendental functions:
a=np.arange(5)
np.sin(a)

np.log(a)

np.exp(a)  # evaluates e*x for each element in a given input

''' shape mismatch
a=np.arange(4)
a+np.array([1,2])
'''  #operands could not be broadcast together with shapes (4,) (2,)

# basic reductions
x=np.array([1,2,3,4])
np.sum(x)

# sum by rows and columns
x=np.array([[1,1],[2,2]])
x

x.sum(axis=0)   # columns first dimension

x.sum(axis=1)   # rows first dimension

#other reductions
x = np.array([1,3,2])
x.min()

x.max()

x.argmin() # index of min value



x.argmax() # index of max value

# logical operations
np.all([True,True,False])

np.any([True,True,False])

a=np.zeros([50,50])
np.any(a!=0)

np.all(a==a)

a=np.array([1,2,3,2])
b=np.array([2,2,3,2])
c=np.array([6,4,4,5])
((a<=b) & (b<=c)).all()

